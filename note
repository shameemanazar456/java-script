JavaScript
------------------
-can be used in both front end as well as backend
    - frontend - it gives behaviour
    -backend - it is used to do logical operations
-JS is compiled using node
javascript is a single thread programming language - line by line execution
-javascript is a dynamically typed language - datatype changes

-file extention must be .js

-to disply content - console.log()

data type (8type)
----------------
1>string - single or double quotes
2>boolean - true or false
3> number - integer and decimal values

method to check data type - typeOf()


concatination - to join/add same or different data type

--------------

string + string = string
string + number = string
number + number = number
strinhg*number = number

variables
------------
-used to store data
- identifiers - set of rules to create variables 
    -Starts with letters dollar underscore - prfer letter
    -subsequent characters can be letters digits underscore etc.
    - if there is more than one word 
            -second word can be start with capital letter'
                -or use undercsore btw word
            -no space btw the words
    syntax:
    variablename=value;

    keyword variablename = value;
keyword -set of resrved words which gives a spl meaning to variables
    -cannot be usd as variable name fn name etc.

    1>const - its value donot change - hoisting is not possible
    2>var - its value can be change - hoisting possible - scope:global
    3>let - reassigning possible - accesible inside a block({---}) - hoisting is also not possible - scope :functional

hoisting - using of variable before it is created/declared


template literals
-----------------------
-its a way of displaying content
`content ${variable}`

operator
----------------
1> Assignment operator - =
2> Aritghmetic operator
    addition - +
    subtraction  - -
    division - /
    multipilcation - *
    modules - %
    exponent - power - **
3>Relational operators - will return boolean values
    > >= < <= == ===
    = to assign values
    == to check values are equal
    === to check value and data type are equal
4>Logical OPerators  - JOIN TWO OR MORE RELATIONAL OPERATORS - return boolean values
    AND - (&&)
        T && T = T
        T && F = F
        F && T = F
        F && F = F
    OR - (||)
        T && T = T
        T && F = T
        F && T = T
        F && F = F
    NOT - !
        !T = F
        !F = T
5> increment /decrement operators
    (++)/--
    x=10
    x++ = 10+1=11
    x-- = 10-1=9

6> shorthand operator
    x=x+y => x+=y
    x=x-y =>x-=y

7> ternary operator 
    condition?true:false;
    age>=18?"vote":"no vote";

conditional satement/decision making statements
1> if else
        if (condition)
        {
            statements if true
        }
        else if{
            
        }
        else
        {
            statements if false
        }
Looping Statements
----------------------

- to do a task repeatedly
1>while loop
    syntax
    ----------
    variable initialization
    while(condition)
    {
        task
        condition to exit the loop(incriment /decrement)
    }

2> for
    syntax:
    for(var init; condition; exit condition)
    {
        statements
    }
    braek: is used to forcefully exit a loop

Nested Loop:Loop inside another loop

Functions
--------------------
-used to do same task repetedly at different locations.
-two parts
    1>function definition 
        -task 
        -syntax:
            function functionname(arg,. . ., arg)
            {
                task
                return var
            }

            function-keyword
            arg- variables that are needed to perform task

    2>function call
        to execute the task
        -synatx:
        ------
        functionname(arg1, arg2..., argn)
    
    function hositing- calling a function before definition. for normal functions hoisting is possible
    variable inside a fun is block level scope
    return var; to access a variable outside a fun
    always give return statement as the last ststement of a function

    Arrow Function
    -----------------
    es6 version - gives more performance

    syntax:
    keyword variable=(args)=>{
        more than one stement
    }


    function call using variable

    variable()

    3> Predefined functions

    -those function created by the pgm developers
    -example
    1> Number - to convert to number datatype
    2>Math.floor()-to remove decimals
    3>parseInt()-to convert to integer
    4>typeof()
    5>console.log()

    4> call back function

        -function calling another function

        setTimeout - it is a predefined function

    5>Asynchronous function - fn which has time dealy
        setTimeout
        API calls

    6>Synchronous function

    7>Nested Function- function definition inside another function
        closure property: variables inside a parent can be accessed in child component but not viceversa whereas variables inside child can not be used in parent function.
            function parent(){
                const parent='parent'
                console.log(`variable inside parent function is :${parent}`);
                /*console.log(`varible inside child is :${childvar}`);*/   this is not possible since childvar is child function's variable
            
                function child(){
                    const childvar='child'
                    console.log(`varible inside child is :${childvar}`);
                    console.log(`variable inside parent function is :${parent}`);//this is possible. since parent is parent fun member.
                }
                child()
            }
            
            parent();




DATASTRUCTURE
----------------------

-datastructure is a specialized format of organizing, retrieving, processing and storing data.
example:
-Array, list, linked list, stack, queue, tree, graph


-Array
-----------
    -unlike variables array can hold more than one value/data at a time

    -definition: Array is a single variable which can store more than one value of differnt data type thet are seprated by commas and enclosed within square brackets.

    -Array can store more than one datatype.
    -store - key:value 
    -key - index position
    -value - data to be stored
    index: indicates the position of elements in an array.
    value starts from 0 and ends in length-1

    length-number of items/elements in an array. lenghth starts from 1.

    representation/syntax:
    keyword variable = [item1 ....itemn]
Array in javascript is infinite
    array operations:
    1) push():to add data to the end of an Array
    2) unshift() - used to add data to an array at the begining of an array
    3)pop() - to remove an item from an array
    4) shift() -to remove item from the start
    5)sort()-to arrange the array

different way of accessing array elements
--------------------------------------------
1)for loop:
2)for in:directly access the index
3)for of:directly access the values

linear search
Binary Search: will reduce the time dealy
            work on sorted array
            binary search - asending order
            sort()

            ascending

            sort((a,b)=>a-b)

            descending
            sort((a,b)=>b-a)

Nested array - array within an array

flat()- decreses the array two one lower position(2d - 1D)
flat(depth) - decreses depth dimention from array
            suppose flat(3) decreses 4d array to one dimention
            


